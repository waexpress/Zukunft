(function($){jQuery.fn.extend({click:function(callback){return this.addEventListener('click',callback);},rightclick:function(callback){return this.addEventListener('rightclick',callback);},dblclick:function(callback){return this.addEventListener('dblclick',callback);},mouseover:function(callback){return this.addEventListener('mouseover',callback);},mouseout:function(callback){return this.addEventListener('mouseout',callback);},drag:function(callback){return this.addEventListener('drag',callback);},dragend:function(callback){return this.addEventListener('dragend',callback);},triggerEvent:function(type){google.maps.event.trigger(this.get(0),type);},addEventListener:function(type,callback){if(this.get(0)instanceof google.maps.MVCObject){google.maps.event.addListener(this.get(0),type,callback);}else{this.bind(type,callback);}
return this;}});$.widget("ui.gmap",{options:{backgroundColor:null,center:new google.maps.LatLng(0.0,0.0),disableDefaultUI:false,disableDoubleClickZoom:false,draggable:true,draggableCursor:null,draggingCursor:null,keyboardShortcuts:true,mapTypeControl:true,mapTypeControlOptions:null,mapTypeId:google.maps.MapTypeId.ROADMAP,navigationControl:true,navigationControlOptions:null,noClear:false,scaleControl:false,scaleControlOptions:null,scrollwheel:false,streetViewControl:true,streetViewControlOptions:null,zoom:5,callback:null},_create:function(){$.ui.gmap.instances[this.element.attr('id')]={map:new google.maps.Map(this.element[0],this.options),markers:[],bounds:null,services:[]};},_init:function(){$.ui.gmap._trigger(this.options.callback,this.getMap());return $(this.getMap());},_setOption:function(key,value){$.Widget.prototype._setOption.apply(this,arguments);this.getMap().setOptions(this.options);},addBounds:function(latLng){var instances=$.ui.gmap.instances[this.element.attr('id')];if(!instances.bounds){instances.bounds=new google.maps.LatLngBounds();}
instances.bounds.extend(latLng);instances.map.fitBounds(instances.bounds);},addControl:function(panel,position){this.getMap().controls[position].push($.ui.gmap._unwrap(panel));},addMarker:function(opts,callback){var marker=new google.maps.Marker(jQuery.extend({'map':this.getMap(),'bounds':false},opts));this.getMarkers().push(marker);if(marker.bounds){this.addBounds(marker.getPosition());}
$.ui.gmap._trigger(callback,this.getMap(),marker);return $(marker);},addInfoWindow:function(opts,callback){var iw=new google.maps.InfoWindow(opts);$.ui.gmap._trigger(callback,iw);return $(iw);},displayDirections:function(request,opts,callback){var instance=$.ui.gmap.instances[this.element.attr('id')];if(!instance.services.DirectionsService){instance.services.DirectionsService=new google.maps.DirectionsService();}
if(!instance.services.DirectionsRenderer){instance.services.DirectionsRenderer=new google.maps.DirectionsRenderer(jQuery.extend({'map':instance.map},opts));}
instance.services.DirectionsService.route(request,function(result,status){if(status===google.maps.DirectionsStatus.OK){if(opts.panel){instance.services.DirectionsRenderer.setDirections(result);}}else{instance.services.DirectionsRenderer.setMap(null);}
$.ui.gmap._trigger(callback,(status===google.maps.DirectionsStatus.OK),result);});},displayStreetView:function(panel,opts){var instance=$.ui.gmap.instances[this.element.attr('id')];if(!instance.services.StreetViewPanorama){instance.services.StreetViewPanorama=new google.maps.StreetViewPanorama($.ui.gmap._unwrap(panel),opts);}
instance.map.setStreetView(instance.services.StreetViewPanorama);},findMarker:function(property,value,callback){$.each(this.getMarkers(),function(i,marker){$.ui.gmap._trigger(callback,(marker[property]===value),marker);});},loadMetadata:function(type,ns,callback){if(type==='rdfa'){$.ui.gmap.rdfa(ns,callback);}else if(type==='microformat'){$.ui.gmap.microformat(ns,callback);}else if(type==='microdata'){$.ui.gmap.microdata(ns,callback);}},loadFusion:function(id,opts){var instance=$.ui.gmap.instances[this.element.attr('id')];if(!instance.services.FusionTablesLayer){instance.services.FusionTablesLayer=new google.maps.FusionTablesLayer(id,opts);}
instance.services.FusionTablesLayer.setMap(this.getMap());},loadKML:function(id,url,opts){var instance=$.ui.gmap.instances[this.element.attr('id')];if(!instance.services[id])
instance.services[id]=new google.maps.KmlLayer(url,jQuery.extend({'map':instance.map},opts));},search:function(request,callback){var instance=$.ui.gmap.instances[this.element.attr('id')];if(!instance.services.Geocoder){instance.services.Geocoder=new google.maps.Geocoder();}
instance.services.Geocoder.geocode(request,function(result,status){$.ui.gmap._trigger(callback,(status===google.maps.GeocoderStatus.OK),result);});},getMap:function(){return $.ui.gmap.instances[this.element.attr('id')].map;},getMarkers:function(){return $.ui.gmap.instances[this.element.attr('id')].markers;},getService:function(id){return $.ui.gmap.instances[this.element.attr('id')].services[id];},clearMarkers:function(){$.each(this.getMarkers(),function(i,m){google.maps.event.clearInstanceListeners(m);m.setMap(null);m=null;});$.ui.gmap.instances[this.element.attr('id')].markers=[];},destroy:function(){this.clearMarkers();google.maps.event.clearInstanceListeners(this.getMap());$.each($.ui.gmap.instances[this.element.attr('id')].services,function(i,obj){obj=null;});$.Widget.prototype.destroy.call(this);}});$.extend($.ui.gmap,{version:"2.0",instances:[],_trigger:function(callback){if($.isFunction(callback)){callback.apply(this,Array.prototype.slice.call(arguments,1));}},_unwrap:function unwrap(obj){if(!obj){return null;}else if(obj instanceof jQuery){return obj[0];}else if(obj instanceof Object){return obj;}
return document.getElementById(obj);}});}(jQuery));